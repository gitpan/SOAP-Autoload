
SOAP-Autoload was my learning exercise for getting familiar with SOAP.
The objective of the "SOAP::Autoload" and "SOAP::Autounload" classes are
to allow you to use Perl classes as you normal would  and not think
(much) about the classes actually being located elsewhere.

SOAP::Autoload uses Autoload to setup the remote method call.  Arguments
are passed into the SOAP struct with the simple names "ARG0", "ARG1", ...
"ARGn" that SOAP::Autounload knows to look for an unpack.  Autounload
returns the response from the method call in the same way.

The actual details of setting up the call are hidden from you and you would
use the remote class in the usual way (as if it were local).

The approach works well with simple data types but is limited to what
the SOAP package can serialize.  SOAP::Auto(un)load will try and send an
array of data using Data::Dumper which is a required package.

Install the server/Calculator.pm and SOAP/Autounload on your server side,
and make the appropriate modifications in your mod_perl handler.  The
demonstration script client/calculator.pl demonstrates the method call to
the server.


Next:

  1) Perhaps combining the Autoload and Autounload into a single module?
  2) Renaming as SOAP::Transport::HTTP::Autoload since the module is
     HTTP specific.

Comments and suggestions are of course appreciated.


Daniel
yacob@rcn.com
